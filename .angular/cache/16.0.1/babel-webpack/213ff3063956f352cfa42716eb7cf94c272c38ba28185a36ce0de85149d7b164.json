{"ast":null,"code":"import { HEROES } from '../moduls/mock-heroes';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./message.service\";\nlet HeroService = /*#__PURE__*/(() => {\n  class HeroService {\n    constructor(messageService) {\n      this.messageService = messageService;\n      this.heroes = [];\n      this.heroes = HEROES;\n    }\n    getHeroe(id) {\n      return of(this.heroes.find(item => item.id == id));\n    }\n    getHeroes(mesage) {\n      this.messageService.addMessage(mesage + \": fetched heroes\");\n      return of(this.heroes);\n    }\n    getIdLastHeroe() {\n      return of(this.heroes[this.heroes.length - 1].id + 1);\n    }\n    deleteHeroe(id) {\n      this.messageService.addMessage(\"-- Delete Hero id:\" + id + \" Ok\");\n      return of(this.heroes = this.heroes.filter(heroe => heroe.id != id));\n    }\n    addHeroe(hero) {\n      this.messageService.addMessage(\"-- Add Hero id:\" + hero.id + \" Ok\");\n      return of(this.heroes.push(hero));\n    }\n    updateHeroe(hero) {\n      return of(this.heroes.map(myhero => {\n        if (myhero.id === hero.id) {\n          this.messageService.addMessage(\"-- Update Hero id:\" + myhero.id + \" Ok\");\n          myhero.name = hero.name;\n        }\n        ;\n      }));\n    }\n  }\n  HeroService.ɵfac = function HeroService_Factory(t) {\n    return new (t || HeroService)(i0.ɵɵinject(i1.MessageService));\n  };\n  HeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HeroService,\n    factory: HeroService.ɵfac,\n    providedIn: 'root'\n  });\n  return HeroService;\n})();\nexport { HeroService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}