{"ast":null,"code":"import { HEROES } from '../moduls/mock-heroes';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./message.service\";\nimport * as i2 from \"@angular/common/http\";\nclass HeroService {\n  constructor(messageService, http) {\n    this.messageService = messageService;\n    this.http = http;\n    this.heroes = [];\n    this.heroesUrl = 'https://jsonplaceholder.typicode.com/photos';\n    this.heroes = HEROES;\n  }\n  getHeroe(id) {\n    return of(this.heroes.find(item => item.id == id));\n  }\n  getHeroes(mesage) {\n    this.messageService.addMessage(mesage + \": fetched heroes\");\n    return this.http.get(this.heroesUrl);\n    //return of(this.heroes);\n  }\n\n  getIdLastHeroe() {\n    return of(this.heroes[this.heroes.length - 1].id + 1);\n  }\n  deleteHeroe(id) {\n    this.messageService.addMessage(\"-- Delete Hero id:\" + id + \" Ok\");\n    return of(this.heroes = this.heroes.filter(heroe => heroe.id != id));\n  }\n  addHeroe(hero) {\n    this.messageService.addMessage(\"-- Add Hero id:\" + hero.id + \" Ok\");\n    return of(this.heroes.push(hero));\n  }\n  updateHeroe(hero) {\n    return of(this.heroes.map(myhero => {\n      if (myhero.id === hero.id) {\n        this.messageService.addMessage(\"-- Update Hero id:\" + myhero.id + \" Ok\");\n        myhero.name = hero.name;\n      }\n      ;\n    }));\n  }\n  handleError(operation = 'operation', result) {\n    return error => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n      // TODO: better job of transforming error for user consumption\n      //this.log(`${operation} failed: ${error.message}`);\n      this.messageService.addMessage(`-- ${operation} -- failed: ${error.message}  KO`);\n      // Let the app keep running by returning an empty result.\n      return of(result);\n    };\n  }\n}\nHeroService.ɵfac = function HeroService_Factory(t) {\n  return new (t || HeroService)(i0.ɵɵinject(i1.MessageService), i0.ɵɵinject(i2.HttpClient));\n};\nHeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HeroService,\n  factory: HeroService.ɵfac,\n  providedIn: 'root'\n});\nexport { HeroService };","map":{"version":3,"names":["HEROES","of","HeroService","constructor","messageService","http","heroes","heroesUrl","getHeroe","id","find","item","getHeroes","mesage","addMessage","get","getIdLastHeroe","length","deleteHeroe","filter","heroe","addHeroe","hero","push","updateHeroe","map","myhero","name","handleError","operation","result","error","console","message","i0","ɵɵinject","i1","MessageService","i2","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\CURSOS\\MIO\\Angular\\my-app\\src\\app\\services\\hero.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Hero, Heroo } from '../moduls/hero.interface';\nimport { HEROES } from '../moduls/mock-heroes';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeroService {\n\n  heroes:Hero[]=[];\n  private heroesUrl = 'https://jsonplaceholder.typicode.com/photos';\n  \n\n  constructor(\n      private messageService:MessageService,\n      private http: HttpClient) { \n      this.heroes = HEROES;\n  }\n\n  getHeroe(id:number):Observable<any> { \n    return of(this.heroes.find(item=>item.id == id));\n\n  }\n\n  getHeroes(mesage:string):Observable<Heroo[]>{\n    this.messageService.addMessage(mesage + \": fetched heroes\");\n    return this.http.get<Heroo[]>(this.heroesUrl);\n\n    //return of(this.heroes);\n  }\n\n  getIdLastHeroe():Observable<number>{\n    return of( this.heroes[this.heroes.length-1].id + 1 );\n  }  \n\n  deleteHeroe(id:number):Observable<Hero[]>{\n    this.messageService.addMessage(\"-- Delete Hero id:\" + id + \" Ok\");\n    return  of(this.heroes = this.heroes.filter(heroe => heroe.id != id));\n  }\n\n  addHeroe(hero:Hero):Observable<any>{\n    this.messageService.addMessage(\"-- Add Hero id:\" + hero.id + \" Ok\");\n    return  of( this.heroes.push(hero) );\n  }\n\n  updateHeroe(hero:Hero):Observable<void[]>{\n    return  of(this.heroes.map(\n      (myhero)=>{\n        if(myhero.id === hero.id){\n            this.messageService.addMessage(\"-- Update Hero id:\" + myhero.id + \" Ok\");\n            myhero.name = hero.name\n          };\n        }    \n      )\n    );    \n  }  \n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n  \n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n  \n      // TODO: better job of transforming error for user consumption\n      //this.log(`${operation} failed: ${error.message}`);\n      this.messageService.addMessage(`-- ${operation} -- failed: ${error.message}  KO`);\n  \n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n"],"mappings":"AAEA,SAASA,MAAM,QAAQ,uBAAuB;AAC9C,SAAqBC,EAAE,QAAQ,MAAM;;;;AAIrC,MAGaC,WAAW;EAMtBC,YACYC,cAA6B,EAC7BC,IAAgB;IADhB,KAAAD,cAAc,GAAdA,cAAc;IACd,KAAAC,IAAI,GAAJA,IAAI;IANhB,KAAAC,MAAM,GAAQ,EAAE;IACR,KAAAC,SAAS,GAAG,6CAA6C;IAM7D,IAAI,CAACD,MAAM,GAAGN,MAAM;EACxB;EAEAQ,QAAQA,CAACC,EAAS;IAChB,OAAOR,EAAE,CAAC,IAAI,CAACK,MAAM,CAACI,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACF,EAAE,IAAIA,EAAE,CAAC,CAAC;EAElD;EAEAG,SAASA,CAACC,MAAa;IACrB,IAAI,CAACT,cAAc,CAACU,UAAU,CAACD,MAAM,GAAG,kBAAkB,CAAC;IAC3D,OAAO,IAAI,CAACR,IAAI,CAACU,GAAG,CAAU,IAAI,CAACR,SAAS,CAAC;IAE7C;EACF;;EAEAS,cAAcA,CAAA;IACZ,OAAOf,EAAE,CAAE,IAAI,CAACK,MAAM,CAAC,IAAI,CAACA,MAAM,CAACW,MAAM,GAAC,CAAC,CAAC,CAACR,EAAE,GAAG,CAAC,CAAE;EACvD;EAEAS,WAAWA,CAACT,EAAS;IACnB,IAAI,CAACL,cAAc,CAACU,UAAU,CAAC,oBAAoB,GAAGL,EAAE,GAAG,KAAK,CAAC;IACjE,OAAQR,EAAE,CAAC,IAAI,CAACK,MAAM,GAAG,IAAI,CAACA,MAAM,CAACa,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACX,EAAE,IAAIA,EAAE,CAAC,CAAC;EACvE;EAEAY,QAAQA,CAACC,IAAS;IAChB,IAAI,CAAClB,cAAc,CAACU,UAAU,CAAC,iBAAiB,GAAGQ,IAAI,CAACb,EAAE,GAAG,KAAK,CAAC;IACnE,OAAQR,EAAE,CAAE,IAAI,CAACK,MAAM,CAACiB,IAAI,CAACD,IAAI,CAAC,CAAE;EACtC;EAEAE,WAAWA,CAACF,IAAS;IACnB,OAAQrB,EAAE,CAAC,IAAI,CAACK,MAAM,CAACmB,GAAG,CACvBC,MAAM,IAAG;MACR,IAAGA,MAAM,CAACjB,EAAE,KAAKa,IAAI,CAACb,EAAE,EAAC;QACrB,IAAI,CAACL,cAAc,CAACU,UAAU,CAAC,oBAAoB,GAAGY,MAAM,CAACjB,EAAE,GAAG,KAAK,CAAC;QACxEiB,MAAM,CAACC,IAAI,GAAGL,IAAI,CAACK,IAAI;;MACxB;IACH,CAAC,CACF,CACF;EACH;EAEQC,WAAWA,CAAIC,SAAS,GAAG,WAAW,EAAEC,MAAU;IACxD,OAAQC,KAAU,IAAmB;MAEnC;MACAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC;MAEtB;MACA;MACA,IAAI,CAAC3B,cAAc,CAACU,UAAU,CAAC,MAAMe,SAAS,eAAeE,KAAK,CAACE,OAAO,MAAM,CAAC;MAEjF;MACA,OAAOhC,EAAE,CAAC6B,MAAW,CAAC;IACxB,CAAC;EACH;;AA/DW5B,WAAW,C;mBAAXA,WAAW,EAAAgC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,UAAA;AAAA;AAAXrC,WAAW,C;SAAXA,WAAW;EAAAsC,OAAA,EAAXtC,WAAW,CAAAuC,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPxC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}