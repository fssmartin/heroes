{"ast":null,"code":"import { HEROES } from '../moduls/mock-heroes';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./message.service\";\nclass HeroService {\n  constructor(messageService) {\n    this.messageService = messageService;\n    this.heroes = [];\n    this.heroes = HEROES;\n  }\n  getHeroe(id) {\n    return of(this.heroes.find(item => item.id == id));\n  }\n  getHeroes(mesage) {\n    this.messageService.addMessage(mesage + \": fetched heroes\");\n    return of(this.heroes);\n  }\n  getIdLastHeroe() {\n    return of(this.heroes[this.heroes.length - 1].id + 1);\n  }\n  deleteHeroe(id) {\n    this.messageService.addMessage(\"-- Delete Hero id:\" + id + \" Ok\");\n    return of(this.heroes = this.heroes.filter(heroe => heroe.id != id));\n  }\n  addHeroe(hero) {\n    this.messageService.addMessage(\"-- Add Hero id:\" + hero.id + \" Ok\");\n    return of(this.heroes.push(hero));\n  }\n  updateHeroe(hero) {\n    setTimeout(() => {\n      return;\n      of(this.heroes.map(myhero => {\n        if (myhero.id === hero.id) {\n          this.messageService.addMessage(\"-- Update Hero id:\" + myhero.id + \" Ok\");\n          myhero.name = hero.name;\n        }\n        ;\n      }));\n    }, 100);\n  }\n}\nHeroService.ɵfac = function HeroService_Factory(t) {\n  return new (t || HeroService)(i0.ɵɵinject(i1.MessageService));\n};\nHeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HeroService,\n  factory: HeroService.ɵfac,\n  providedIn: 'root'\n});\nexport { HeroService };","map":{"version":3,"names":["HEROES","of","HeroService","constructor","messageService","heroes","getHeroe","id","find","item","getHeroes","mesage","addMessage","getIdLastHeroe","length","deleteHeroe","filter","heroe","addHeroe","hero","push","updateHeroe","setTimeout","map","myhero","name","i0","ɵɵinject","i1","MessageService","factory","ɵfac","providedIn"],"sources":["C:\\CURSOS\\MIO\\Angular\\my-app\\src\\app\\services\\hero.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Hero } from '../moduls/hero.interface';\nimport { HEROES } from '../moduls/mock-heroes';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeroService {\n\n  heroes:Hero[]=[];\n\n  constructor(private messageService:MessageService) { \n      this.heroes = HEROES;\n  }\n\n  getHeroe(id:number):Observable<any> { \n    return of(this.heroes.find(item=>item.id == id));\n  }\n\n  getHeroes(mesage:string):Observable<Hero[]>{\n    this.messageService.addMessage(mesage + \": fetched heroes\");\n    return of(this.heroes);\n  }\n\n  getIdLastHeroe():Observable<number>{\n    return of( this.heroes[this.heroes.length-1].id + 1 );\n  }  \n\n  deleteHeroe(id:number):Observable<Hero[]>{\n    this.messageService.addMessage(\"-- Delete Hero id:\" + id + \" Ok\");\n    return  of(this.heroes = this.heroes.filter(heroe => heroe.id != id));\n  }\n\n  addHeroe(hero:Hero):Observable<any>{\n    this.messageService.addMessage(\"-- Add Hero id:\" + hero.id + \" Ok\");\n    return  of( this.heroes.push(hero) );\n  }\n\n  updateHeroe(hero:Hero):Observable<void[]>{\n      setTimeout(() => {\n        return        \n          of(this.heroes.map(\n            (myhero)=>{\n              if(myhero.id === hero.id){\n                this.messageService.addMessage(\"-- Update Hero id:\" + myhero.id + \" Ok\");\n                  myhero.name = hero.name\n                };\n              }    \n            )\n          );    \n          \n      }, 100); \n  }  \n}\n"],"mappings":"AAEA,SAASA,MAAM,QAAQ,uBAAuB;AAC9C,SAAqBC,EAAE,QAAQ,MAAM;;;AAIrC,MAGaC,WAAW;EAItBC,YAAoBC,cAA6B;IAA7B,KAAAA,cAAc,GAAdA,cAAc;IAFlC,KAAAC,MAAM,GAAQ,EAAE;IAGZ,IAAI,CAACA,MAAM,GAAGL,MAAM;EACxB;EAEAM,QAAQA,CAACC,EAAS;IAChB,OAAON,EAAE,CAAC,IAAI,CAACI,MAAM,CAACG,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACF,EAAE,IAAIA,EAAE,CAAC,CAAC;EAClD;EAEAG,SAASA,CAACC,MAAa;IACrB,IAAI,CAACP,cAAc,CAACQ,UAAU,CAACD,MAAM,GAAG,kBAAkB,CAAC;IAC3D,OAAOV,EAAE,CAAC,IAAI,CAACI,MAAM,CAAC;EACxB;EAEAQ,cAAcA,CAAA;IACZ,OAAOZ,EAAE,CAAE,IAAI,CAACI,MAAM,CAAC,IAAI,CAACA,MAAM,CAACS,MAAM,GAAC,CAAC,CAAC,CAACP,EAAE,GAAG,CAAC,CAAE;EACvD;EAEAQ,WAAWA,CAACR,EAAS;IACnB,IAAI,CAACH,cAAc,CAACQ,UAAU,CAAC,oBAAoB,GAAGL,EAAE,GAAG,KAAK,CAAC;IACjE,OAAQN,EAAE,CAAC,IAAI,CAACI,MAAM,GAAG,IAAI,CAACA,MAAM,CAACW,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACV,EAAE,IAAIA,EAAE,CAAC,CAAC;EACvE;EAEAW,QAAQA,CAACC,IAAS;IAChB,IAAI,CAACf,cAAc,CAACQ,UAAU,CAAC,iBAAiB,GAAGO,IAAI,CAACZ,EAAE,GAAG,KAAK,CAAC;IACnE,OAAQN,EAAE,CAAE,IAAI,CAACI,MAAM,CAACe,IAAI,CAACD,IAAI,CAAC,CAAE;EACtC;EAEAE,WAAWA,CAACF,IAAS;IACjBG,UAAU,CAAC,MAAK;MACd;MACErB,EAAE,CAAC,IAAI,CAACI,MAAM,CAACkB,GAAG,CACfC,MAAM,IAAG;QACR,IAAGA,MAAM,CAACjB,EAAE,KAAKY,IAAI,CAACZ,EAAE,EAAC;UACvB,IAAI,CAACH,cAAc,CAACQ,UAAU,CAAC,oBAAoB,GAAGY,MAAM,CAACjB,EAAE,GAAG,KAAK,CAAC;UACtEiB,MAAM,CAACC,IAAI,GAAGN,IAAI,CAACM,IAAI;;QACxB;MACH,CAAC,CACF,CACF;IAEL,CAAC,EAAE,GAAG,CAAC;EACX;;AA7CWvB,WAAW,C;mBAAXA,WAAW,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;AAAX3B,WAAW,C;SAAXA,WAAW;EAAA4B,OAAA,EAAX5B,WAAW,CAAA6B,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEP9B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}